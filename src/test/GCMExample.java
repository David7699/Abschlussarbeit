package test;

import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.GCMParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import org.bouncycastle.util.Strings;
import org.bouncycastle.util.encoders.Hex;

public class GCMExample {

	public static void main(String[] args) throws Exception {
		SecretKey aesKey = createConstantKey();

		byte[] iv = Hex.decode("bbaa99887766554433221100");
		byte[] msg = Strings.toByteArray("hello, world!");

		System.out.println("msg:   " + Hex.toHexString(msg));

		byte[] cText = gcmEncrypt(aesKey, iv, 128, msg);

		System.out.println("cText: " + Hex.toHexString(cText));

		// Die folgende Zeile ndert den Ciphertext, so dass
		// bei der Entschlsselung eine AEADBadTagException geworfen wird.
		// cText[0] = (byte)~cText[0];

		byte[] pText = gcmDecrypt(aesKey, iv, 128, cText);

		System.out.println("pText: " + Hex.toHexString(pText));
	}

	/**
	 * Create a constant value AES key.
	 * 
	 * @return a constant AES key.
	 */
	static SecretKey createConstantKey() {
		return new SecretKeySpec(Hex.decode("000102030405060708090a0b0c0d0e0f"), "AES");
	}

	/**
	 * Encrypt the passed in data pText using GCM with the passed in parameters.
	 *
	 * @param key    secret key to use.
	 * @param iv     the IV to use with GCM.
	 * @param tagLen the length of the MAC to be generated by GCM.
	 * @param pText  the plain text input to the cipher.
	 * @return the cipher text.
	 */
	static byte[] gcmEncrypt(SecretKey key, byte[] iv, int tagLen, byte[] pText) throws Exception {
		Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding", "BC");

		GCMParameterSpec spec = new GCMParameterSpec(tagLen, iv);

		cipher.init(Cipher.ENCRYPT_MODE, key, spec);

		return cipher.doFinal(pText);
	}

	/**
	 * Decrypt the cipher text cText using the passed in key and other parameters.
	 *
	 * @param key    secret key to use.
	 * @param iv     the IV to use with GCM.
	 * @param tagLen the length of the MAC previously generated by GCM.
	 * @param cText  the encrypted cipher text.
	 * @return the original plain text.
	 */
	static byte[] gcmDecrypt(SecretKey key, byte[] iv, int tagLen, byte[] cText) throws Exception {
		Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding", "BC");

		GCMParameterSpec spec = new GCMParameterSpec(tagLen, iv);

		cipher.init(Cipher.DECRYPT_MODE, key, spec);

		return cipher.doFinal(cText);
	}
}

